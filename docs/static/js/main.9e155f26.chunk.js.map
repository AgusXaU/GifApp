{"version":3,"sources":["components/AddCategoria.js","helper/GetGif.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","category","type","value","onChange","target","getGif","categoria","a","url","encodeURI","fetch","resp","json","data","Gif","map","img","id","titulo","title","images","original","GifGrid","loading","state","setState","useEffect","then","gif","useFetchGif","className","src","alt","width","height","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC1B,EAAoCC,mBAAS,CAAC,KAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,mCACI,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAS,IAClBP,GAAc,SAAAQ,GAAQ,OAAIN,GAAJ,mBAAmBM,OAC1CL,EAAc,MAKd,SACI,uBAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAbxB,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,e,uBCNlBG,EAAM,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,iDACsCC,UAAWH,GADjD,+DAEEI,MAAMF,GAFR,cAEXG,EAFW,gBAGIA,EAAKC,OAHT,uBAGVC,EAHU,EAGVA,KACDC,EAAMD,EAAKE,KAAI,SAAAC,GAAG,MACpB,CACGC,GAAGD,EAAIC,GACPC,OAAOF,EAAIG,MACXX,IAAIQ,EAAII,OAAOC,SAASb,QARd,kBAWVM,GAXU,4CAAF,sDCGNQ,EAAU,SAAC,GAAiB,IAAhBhB,EAAe,EAAfA,UAEtB,ECFwB,SAACA,GAE5B,MAA0Bb,mBAAS,CAC/BoB,KAAK,GACLU,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAVAC,qBAAU,WACRrB,EAAOC,GACNqB,MAAK,SAAAC,GACAH,EAAS,CACLZ,KAAKe,EACLL,SAAQ,SAIjB,CAACjB,IACGkB,EDdmBK,CAAYvB,GAA5BiB,EAAP,EAAOA,QAAQV,EAAf,EAAeA,KAEd,OACI,qCACI,6BAAKP,IACJiB,GAAS,oBAAIO,UAAU,mCAAd,yBACV,qBAAKA,UAAU,mBAAf,SAEYjB,EAAKE,KAAK,gBAAEE,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQV,EAAd,EAAcA,IAAd,OACN,sBAAcsB,UAAU,4CAAxB,UACI,qBAAKC,IAAKvB,EAAKwB,IAAKd,EAAQe,MAAM,SAASC,OAAO,WAClD,4BAAG,4BAAIhB,QAFDD,YEVxBkB,EAAe,WACzB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,iDACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,6BAEQ4C,EAAWrB,KAAI,SAAAT,GAAS,OACpB,cAAC,EAAD,aAEAA,UAAWA,GACPA,GAFCA,Y,MCX7B+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9e155f26.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nexport const AddCategoria = ({setCategorias}) => {\n    const [inputValue, setInputValue] = useState(['']);\n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.length > 1){\n             setCategorias(category =>[inputValue, ...category]);\n            setInputValue('');\n        }\n    }  \n    return (\n        <> \n            <form onSubmit={handleSubmit}>\n                <input type='text' value={inputValue} onChange={handleInputChange} />\n            </form>\n        </>\n       \n    )\n}\n","export const getGif= async(categoria)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria) }&limit=12&api_key=JgJH0mgsaP4N5b3UfuB6Mtqhh67pQLfB`;\n    const resp = await fetch(url);\n    const{ data }= await resp.json();\n    const Gif = data.map(img =>(\n        {\n           id:img.id,\n           titulo:img.title,\n           url:img.images.original.url              \n        }\n    ))\n    return Gif;\n}\n","import React from 'react'\nimport { useFetchGif } from '../hooks/useFetchGif'\n\nexport const GifGrid = ({categoria}) => {\n\n   const {loading,data} = useFetchGif(categoria);\n    \n    return (\n        <>\n            <h2>{categoria}</h2>\n            {loading&&<h2 className='animate__animated animate__flash'>Cargando...</h2>}\n            <div className='contenedor-carta'>\n                    {\n                        data.map( ({id, titulo, url}) =>(\n                            <div key={id} className='carta animate__animated animate__bounceIn'>\n                                <img src={url} alt={titulo} width='205rem' height='230rem'/>\n                                <p><b>{titulo}</b></p>\n                            </div>\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGif } from \"../helper/GetGif\";\n\nexport const useFetchGif = (categoria) => {\n\nconst [state, setState] = useState({\n    data:[],\n    loading:true\n});\nuseEffect(() => {\n  getGif(categoria)\n  .then(gif=>{\n        setState({\n            data:gif,\n            loading:false\n        })\n  })\n   \n}, [categoria])\nreturn state;\n\n}\n","import React ,{useState} from 'react';\nimport { AddCategoria } from './components/AddCategoria';\nimport { GifGrid } from './components/GifGrid';\n\n export const GifExpertApp = () => {\n    const [categorias, setCategorias] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>Gift Expert App</h2>\n            <AddCategoria setCategorias={setCategorias} />\n            <hr/>\n            <ol>\n                {\n                    categorias.map(categoria =>(\n                        <GifGrid \n                        key={categoria} \n                        categoria={categoria}\n                        {...categoria}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}